:root {
    --clr-dark: #252525;
    --clr-light: #cfcfcf;

    --bg-light: #f6f6f6;
    --bg-white: white;
    --rounded-corner: 0 0.5rem 0.5rem 00.5rem;
    --fs-default: 1rem;
    --fs-500: 1.15rem;
    --fs-600: 1.75rem;
    --fs-700: 1.85rem;
    --fs-800: 2rem;
    --fs-900: 2.5rem;
    --shadow: 0, 0, 0;

    --status-completed: #73eca6;
    --priority-urgent: #ff5582;
    --priority-important: #fbc54f;
    --priority-normal: #4879ff;
    --status-default: #e0e0e0;
}

/* Utilities */

.flex {
    display: flex;
}

.grid {
    display: grid;
}

body {
    font-family: 'Open Sans', sans-serif;
    color: var(--clr-dark);
    height: 100vh;
    overflow-x: hidden;
}

.flow>*+* {
    margin-top: 1rem;
}

.text-dark {
    color: var(--clr-dark);
}

.medium {
    font-weight: 600;
}

.bold {
    font-weight: 700;
}

.fs-default {
    font-size: var(--fs-default);
}

.fs-500 {
    font-size: var(--fs-500);
}

.fs-600 {
    font-size: var(--fs-600);
}

.fs-800 {
    font-size: var(--fs-800);
}

.fs-900 {
    font-size: var(--fs-900);
}

.bg-light {
    background-color: var(--bg-light);
}

.bg-white {
    background-color: var(--bg-white);
}

.text-light {
    color: var(--clr-light)
}

/* Components */

main {
    display: grid;
    grid-template-columns: minmax(2rem, 1fr) minmax(0, 80rem) minmax(2rem, 1fr);
}

.container--input input,
.container--input textarea,
.container--input select {
    font-family: 'Open Sans', sans-serif !important;
    border: none;
    outline: none;
}

.task-heading {
    place-items: center;
    gap: 1rem;
    padding-block: 1.5rem;
}

.container--tasks {
    grid-column: 2;
    gap: 0.2rem;
}

/* Add Task Button */

.add-task {
    display: inline-grid;
    place-items: center;
    aspect-ratio: 1;
    border-radius: 0.25rem;
    background-color: white;
    box-shadow: 0 0 2px rgb(var(--shadow), 0.5);
}

/* Task Card */

.task {
    position: relative;
    align-items: center;
    gap: 1rem;
    border-radius: 0.2rem;
    border-bottom: 2px solid var(--bg-light);
    /* box-shadow: 0 1px 2px rgb(var(--shadow), 0.125); */
}

::placeholder {
    color: var(--clr-light);
}

.task input {
    padding: 1.35rem 1rem;
    background-color: transparent;
    caret-color: transparent;
}

.task input[data-meta="status"] {
    transform: scale(1.5);
}

.task input[data-meta="title"] {
    width: 100%;
}

.task input::selection {
    background-color: unset;
}

/* Status Indicators */

.status-indicator {
    width: clamp(8px, 2.5%, 10px);
    height: 100%;
    background-color: var(--status-default);
    border-radius: 0.2rem 0 0 0.2rem;
}

.status-completed {
    background-color: var(--status-completed) !important;
}

.status-default {
    background-color: var(--status-default) !important;
}

.priority-indicator {
    width: 8rem;
    padding: 0.35rem 1rem;
    color: var(--bg-white);
    text-align: center;
    white-space: nowrap;
    background-color: var(--priority-urgent);
    border-radius: 0.35rem;
}

.completed {
    color: var(--clr-light);
    text-decoration: line-through;
}

/* Task Modal */

.expand-icon {
    margin-left: auto;
    width: 2rem;
    opacity: 0.35;
    transition: rotate 0.25s ease-in-out;
}

.expand-icon[aria-hidden="false"] {
    rotate: 90deg;
}

.modal {
    z-index: 1000;
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    width: clamp(10rem, 30vw, 60rem);
    height: 100vh;
    background-color: var(--bg-white);
    transform: translateX(100%);
    transition: transform 0.35s ease-in-out;
}

/* Modal Interactive Area */

.modal-buttons {
    justify-self: end;
    right: 2rem;
    top: 2rem;
}

.modal-cancel {
    background-color: transparent;
    cursor: pointer;
}

.modal-save {
    padding: 0.25rem 0.5rem;
    cursor: pointer;
}

.modal-meta {
    width: 100%;
    height: 100%;
    grid-auto-rows: min-content;
    background-color: var(--bg-white);
    padding: 2rem;
}

.modal textarea,
.modal select {
    width: 100%;
}

.modal textarea {
    resize: vertical;
    padding-block: 1rem;
    border-bottom: 1px solid var(--clr-light);
}

.modal select {
    padding-block: 0.5rem;
}

/* Animations */

.new-task {
    animation: new-task 0.25s ease 1;
}

@keyframes new-task {
    0% {
        transform: translateY(50%);
        opacity: 0;
    }

    50% {
        transform: translateY(-10%);

    }

    100% {
        transform: translateY(0);
        opacity: 1;
    }
}

.update-status {
    animation: update-status 0.25s ease 1;
}

@keyframes update-status {
    50% {
        transform: scale(1.01);
    }

    100% {
        transform: scale(1);
    }
}

@keyframes show-modal {
    100% {
        transform: translateX(0);
    }
}