:root {
    font-family: Lato, sans-serif;

    --clr-dark: #252525;
    --clr-light: #cfcfcf;

    --bg-light: #f6f6f6;
    --bg-white: white;
    --rounded-corner: 0 0.5rem 0.5rem 00.5rem;
    --fs-default: 1rem;
    --fs-500: 1.15rem;
    --fs-600: 1.75rem;
    --fs-700: 1.85rem;
    --fs-800: 2rem;
    --fs-900: 2.5rem;
    --shadow: 0, 0, 0;

    --status-completed: #73eca6;
    --status-priority: #f07fec;
    --status-in-progress: #ffda47;
    --status-default: var(--clr-light);
}

/* Utilities */

.flex {
    display: flex;
}

.grid {
    display: grid;
}

body {
    color: var(--clr-dark);
}

.text-dark {
    color: var(--clr-dark);
}

.bold {
    font-weight: 700;
}

.fs-default {
    font-size: var(--fs-default);
}

.fs-500 {
    font-size: var(--fs-500);
}

.fs-600 {
    font-size: var(--fs-600);
}

.fs-800 {
    font-size: var(--fs-800);
}

.fs-900 {
    font-size: var(--fs-900);
}

.bg-light {
    background-color: var(--bg-light);
}

.bg-white {
    background-color: var(--bg-white);
}

/* Components */

main {
    display: grid;
    grid-template-columns: minmax(2rem, 1fr) minmax(0, 80rem) minmax(2rem, 1fr);
}

.task-heading {
    place-items: center;
    gap: 1rem;
    padding-block: 1.5rem;
}

.container--tasks {
    grid-column: 2;
    gap: 1rem;
}

/* Add Task Button */

.add-task {
    display: inline-grid;
    place-items: center;
    aspect-ratio: 1;
    border-radius: 0.25rem;
    background-color: white;
    box-shadow: 0 0 2px rgb(var(--shadow), 0.5);
}

/* Task Card */

.task {
    align-items: center;
    border-radius: 0.65rem;
    box-shadow: 0 1px 2px rgb(var(--shadow), 0.125);
}

::placeholder {
    color: var(--clr-light);
}

.task input,
.task textarea {
    font-family: Poppins, sans-serif !important;
    border: none;
    outline: none;
}

.task input {
    padding: 1.35rem 1rem;
    background-color: transparent;
    caret-color: transparent;
}

.task input[data-meta="status"] {
    transform: scale(1.5);
}

.task input[data-meta="title"] {
    width: 100%;
}

.task input::selection {
    background-color: unset;
}

/* Status Indicators */

.status-indicator {
    left: 0;
    display: inline-grid;
    place-items: center;
    width: clamp(3rem, 10%, 4rem);
    height: 100%;
    border-radius: 0.65rem 0 0 0.65rem;
}

.status-completed {
    background-color: var(--status-completed) !important;
}

.status-default {
    background-color: var(--status-default) !important;
}

.completed {
    color: var(--clr-light);
    text-decoration: line-through;
}

/* Priority Indicators */

.status-priority {
    background-color: var(--status-priority) !important;
}


.status-in-progress {
    background-color: var(--status-in-progress) !important;
}

/* Task Modal */

.expand-icon {
    margin-left: auto;
    width: 2rem;
    opacity: 0.35;
    transition: rotate 0.25s ease-in-out;
}

.expand-icon[aria-hidden="false"] {
    rotate: 90deg;
}

.modal {
    position: absolute;
    z-index: 1000;
    left: 0;
    right: 0;
    display: none;
    margin: 0 auto;
    padding: 1rem 1.5rem;
    width: clamp(15rem, 60vw, 60rem);
    background-color: var(--bg-white);
    box-shadow: 0 1px 2px rgb(var(--shadow), 0.125);
}

.modal::before {
    content: '';
    position: fixed;
    z-index: -1;
    top: 0;
    left: 0;
    right: 0;
    width: 100%;
    height: 100%;
    backdrop-filter: brightness(95%) blur(5px);
}

.modal[aria-hidden="false"] {
    display: grid;
}

.modal textarea {
    padding: 1rem;
    resize: vertical;
    width: unset;
    border-bottom: 1px solid var(--clr-light);
}

/* Animations */

.new-task {
    animation: new-task 0.25s ease 1;
}

@keyframes new-task {
    0% {
        transform: translateY(50%);
        opacity: 0;
    }

    50% {
        transform: translateY(-10%);

    }

    100% {
        transform: translateY(0);
        opacity: 1;
    }
}

.update-status {
    animation: update-status 0.25s ease 1;
}

@keyframes update-status {
    50% {
        transform: scale(1.01);
    }

    100% {
        transform: scale(1);
    }
}

.show-modal {
    animation: show-modal 0.35s ease-in-out 1;
}

@keyframes show-modal {
    0% {
        transform: translateY(100%);
        opacity: 0;
    }

    80% {
        transform: translateY(-5%);
    }

    100% {
        transform: translateY(0);
        opacity: 1;
    }
}

.hide-modal {
    animation: show-modal 0.25s ease-in-out 1;
}

@keyframes hide-modal {
    0% {
        transform: scaleY(1);
        opacity: 1;
    }

    100% {
        transform: scaleY(0);
        opacity: 0;
    }
}